////////////////////////////////////////////////////////////////////////////
//! @file   CountTimer.cpp
//!
//! @brief  カウントタイマーのソースファイル
//!
//! @date   2016/5/23
//!
//! @author 近藤　優和
////////////////////////////////////////////////////////////////////////////



// ヘッダファイルの読み込み------------------------------------------
#include "CountTimer.h"


// 静的メンバ変数の実態 ----------------------------------------------
const int CountTimer::FRAME_NUM = 60;



// --------------------------------------------------------------------
//! @brief		コンストラクタ
// --------------------------------------------------------------------
CountTimer::CountTimer()
	:m_frameCount(FRAME_NUM)
	, m_endFlag(false)
{
}





// --------------------------------------------------------------------
//! @brief		デストラクタ
// --------------------------------------------------------------------
CountTimer::~CountTimer()
{
}






// --------------------------------------------------------------------
//! @brief		タイマーのセット
//!
//! @param[in]	time	タイマーの時間(s)
//!
//! @return     なし
// --------------------------------------------------------------------
void CountTimer::SetTimer(int time)
{
	m_setCount = time;
}








// --------------------------------------------------------------------
//! @brief		更新
//!
//! @param[in]	stop	true	更新を止める
//! @param[in]	stop	false	更新をする
//!
//! @return     なし
// --------------------------------------------------------------------
void CountTimer::Update(bool stop)
{
	// 更新するかどうか
	if (!stop)
	{
		// カウントが０なら更新スキップ
		if (m_setCount <= 0)
		{
			m_setCount = 0;
			m_endFlag = true;
			return;
		}

		m_frameCount++;

		// 60フレームでカウント
		if (m_frameCount >= FRAME_NUM)
		{
			m_setCount--;
		}

	}
}






