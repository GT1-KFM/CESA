////////////////////////////////////////////////////////////////////////////
//! @file   PlayScene.h
//!
//! @brief  プレイシーンのヘッダファイル
//!
//! @date   2016/5/25
//!
//! @author 近藤　優和
////////////////////////////////////////////////////////////////////////////


// 多重インクルード防止　--------------------------------------------------
#pragma once

// ヘッダの読み込み -------------------------------------------------------
#include "..\Scene.h"
#include "Game\Character\Lock.h"


// ---------------------------------------------------------------------------
// PlaySceneクラス
// ---------------------------------------------------------------------------
class PlayScene : public Scene
{

	// 静的メンバ変数 ------------------------------------------------------------
private:

	static Scene*				pScene;					// シーン格納用

	// メンバ変数 ------------------------------------------------------------
private:

	std::unique_ptr<Lock>		m_pLock;				// 鍵


	//	コンストラクタ -------------------------------------------------------
private:

	PlayScene();


	// デストラクタ ----------------------------------------------------------
private:
	
	virtual ~PlayScene();


	// 静的メンバ関数　-------------------------------------------------------
public:

	// ---------------------------------------------------------------------------
	//! @brief      プレイシーンのアドレスを得る
	//!
	//! @return		pScene
	// ---------------------------------------------------------------------------
	static Scene* GetInstance()
	{
		if (pScene == nullptr)
			pScene = new PlayScene();
		return pScene;
	}

	// オブジェクトの破棄
	static void Dispose();


	// メンバ関数 ------------------------------------------------------------
public:

	// 初期化
	void Initialize();

	// 更新
	void Update(ChangeScene* pChangeScene)override;

	// 描画
	void Render()override;

};

