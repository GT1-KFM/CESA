////////////////////////////////////////////////////////////////////////////
//! @file   FadeScene.h
//!
//! @brief  タイトルシーンのヘッダファイル
//!
//! @date   2016/05/24
//!
//! @author 近藤　優和
////////////////////////////////////////////////////////////////////////////


// 多重インクルード防止 ---------------------------------------------------
#pragma once

// ヘッダの読み込み -------------------------------------------------------
#include "..\Scene.h"
#include "Framework\Graphics\SpriteManager.h"




// ---------------------------------------------------------------------------
// FadeSceneクラス
// ---------------------------------------------------------------------------
class FadeScene
{
	// 静的メンバ変数 --------------------------------------------------------
private:





	// メンバ変数 ------------------------------------------------------------
private:

	static FadeScene*						m_pFadeScene;				// シーン格納用
	std::unique_ptr<SpriteManager>			m_pSpriteManager;   // スプライトマネージャ
	std::unique_ptr<Sprite>					m_pFadeSprite;		// フェード用スプライト
	float									m_alpha;


	// コンストラクタ ---------------------------------------------------------
public:

	FadeScene();


	// デストラクタ -----------------------------------------------------------
public:

	virtual ~FadeScene();



	//	メンバ関数 ------------------------------------------------------------
public:


	//-------------------------------------------------------------------------
	//! @brief フェードへのアドレスを取得する
	//!
	//! @param なし
	//!
	//! @retval pScene
	//-------------------------------------------------------------------------
	static FadeScene* GetInstance()
	{
		if (m_pFadeScene == nullptr)
			m_pFadeScene = new FadeScene();
		return m_pFadeScene;
	}


	// 初期化
	void Initialize();
	
	// 更新
	void Update();

	// 描画
	void Render();

	// フェードのリセット
	void Reset() { m_alpha = 1.0f; };

	// オブジェクトの破棄
	static void Dispose();

};
#pragma once
